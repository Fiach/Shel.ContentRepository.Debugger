{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./Resources/Private/JavaScript/index.tsx","webpack:///./Resources/Private/Styles/styles.scss?a800"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;ACjFA,2FAA+B;AAO/B,MAAM,CAAC,MAAM,GAAG;IACZ,MAAM,uBAAuB,GAAgB,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;IACxF,MAAM,aAAa,GAAG,uBAAuB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IACpE,MAAM,8BAA8B,GAAsB,aAAa,CAAC,aAAa,CAAC,6CAA6C,CAAC,CAAC;IACrI,MAAM,cAAc,GAAG,uBAAuB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACvE,MAAM,cAAc,GAAuC,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAEtH,IAAI,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC;IACnH,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAEtD,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;QAChD,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC,aAAa,EAAE,cAAc,CAAC,aAAkC,CAAC,CAAC,IAAI,CAAC,CAAC;IACpH,CAAC,CAAC,CAAC;IACH,eAAe,CAAC,SAAS,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC;IAElD,cAAc,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IACtC,cAAc,CAAC,MAAM,EAAE,CAAC;IAExB,MAAM,QAAQ,GAAG,eAAe,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;IAC/D,MAAM,KAAK,GAAG,eAAe,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAEzD,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QACjB,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YAChC,MAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC;YACjE,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;YACzC,8BAA8B,CAAC,KAAK,GAAG,gBAAgB,CAAC;YACxD,aAAa,CAAC,MAAM,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;;;;;;;;;;;;ACrCF,uC","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./Resources/Private/JavaScript/index.tsx\");\n","\nimport '../Styles/styles.scss';\n\ninterface NodeTypeGroup {\n    name: string;\n    color: string;\n}\n\nwindow.onload = function () {\n    const nodeTypesGraphContainer: HTMLElement = document.querySelector('.nodetypes-graph');\n    const nodeTypesForm = nodeTypesGraphContainer.querySelector('form');\n    const nodeTypesFormBaseNodeTypeField: HTMLSelectElement = nodeTypesForm.querySelector('select[name=\"moduleArguments[baseNodeType]\"');\n    const nodeTypesGraph = nodeTypesGraphContainer.querySelector('object');\n    const nodeTypeGroups: { [index: number]: NodeTypeGroup } = JSON.parse(nodeTypesGraphContainer.dataset.nodetypeGroups);\n\n    let graphSvgSource = window.atob(document.querySelector('object').getAttribute('data').replace(/^.*;base64,/, ''));\n    const graphSvgWrapper = document.createElement('div');\n\n    Object.keys(nodeTypeGroups).forEach(nodeTypeGroup => {\n        graphSvgSource = graphSvgSource.replace(nodeTypeGroup, nodeTypeGroups[nodeTypeGroup as unknown as number].name);\n    });\n    graphSvgWrapper.innerHTML = graphSvgSource.trim();\n\n    nodeTypesGraph.after(graphSvgWrapper);\n    nodeTypesGraph.remove();\n\n    const clusters = graphSvgWrapper.querySelectorAll('g.cluster');\n    const nodes = graphSvgWrapper.querySelectorAll('g.node');\n\n    nodes.forEach(node => {\n        node.addEventListener('click', () => {\n            const selectedNodeType = node.querySelector('title').textContent;\n            console.log('Clicked', selectedNodeType);\n            nodeTypesFormBaseNodeTypeField.value = selectedNodeType;\n            nodeTypesForm.submit();\n        });\n    });\n};\n","// extracted by mini-css-extract-plugin"],"sourceRoot":""}